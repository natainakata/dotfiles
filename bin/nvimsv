#!/usr/bin/env python
import subprocess
import random
import math
from http.server import HTTPServer
from http.server import BaseHTTPRequestHandler
from subprocess import PIPE
from urllib.parse import parse_qs, urlparse


class server1(BaseHTTPRequestHandler):
    def do_GET(self):
        print('path = {}'.format(self.path))

        parsed_path = urlparse(self.path)
        query_string = parse_qs(parsed_path.query)
        print('parsed: path = {}, query = {}'.format(
                  parsed_path.path, query_string))

        print('headers\r\n-----\r\n{}-----'.format(self.headers))

        self.send_response(200)
        self.send_header('Content-Type', 'text/plain; charset=utf-8')
        self.end_headers()
        port = math.floor(random.uniform(6666, 7777))
        proc = subprocess.Popen(
            'nvim --listen localhost:{} --headless'.format(port),
            stdout=PIPE, stderr=PIPE, shell=True)
        try:
            print('Neovim Started!')
            message = 'nvim address:localhost:{}'.format(port)
        except subprocess.SubprocessError:
            proc.kill()
            outs, errs = proc.communicate()
            print('neovim error: {}'.format(errs))
            message = 'nvim errored'
        self.wfile.write(message.encode())

    def do_POST(self):
        print('path = {}'.format(self.path))

        parsed_path = urlparse(self.path)
        print('parsed: path = {}, query = {}'.format(
                  parsed_path.path, parse_qs(parsed_path.query)))

        print('headers\r\n-----\r\n{}-----'.format(self.headers))
        content_length = int(self.headers['content-length'])
        body = self.rfile.read(content_length).decode('utf-8')
        print('body = {}'.format(body))

        self.send_response(200)
        self.send_header('Content-Type', 'text/plain; charset=utf-8')
        self.end_headers()
        port = math.floor(random.uniform(6666, 7777))
        proc = subprocess.Popen(
            'nvim --listen localhost:{} --headless {}'.format(port, body),
            stdout=PIPE, stderr=PIPE, shell=True)
        try:
            print('Neovim Started!')
            message = 'nvim address:localhost:{}'.format(port)
        except subprocess.SubprocessError:
            proc.kill()
            outs, errs = proc.communicate()
            print('neovim error: {}'.format(errs))
            message = 'nvim errored'
        self.wfile.write(message.encode())


ip = '127.0.0.1'
port = 8000

server = HTTPServer((ip, port), server1)

server.serve_forever()
